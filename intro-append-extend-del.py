# Метод append()
# чтобы использовать метод append(), нужно, чтобы список был создан,
# при этом он может быть пустым.
# numbers = [1, 1, 2, 3, 5, 8, 13]  # создаем список
# numbers.append(21)  # добавляем число 21 в конец списка
# numbers.append(34)  # добавляем число 34 в конец списка
# print(numbers)
# выведет:
# [1, 1, 2, 3, 5, 8, 13, 21, 34]

#  код:
# numbers = []  # создаем пустой список
# numbers.append(1)
# numbers.append(2)
# numbers.append(3)
# print(numbers)
# выведет:
# [1, 2, 3]

# если список пустой. Следующий программный код:
# numbers = []  # создаем пустой список
# numbers[0] = 1
# numbers[1] = 2
# numbers[2] = 3
# print(numbers)
# приводит к ошибке:
# IndexError: list assignment index out of range


# Метод extend()
# Следующий программный код:
# numbers = [0, 2, 4, 6, 8, 10]
# odds = [1, 3, 5, 7]
# numbers.extend(odds)
# print(numbers)
# выведет:
# [0, 2, 4, 6, 8, 10, 1, 3, 5, 7]
# Метод extend() как бы расширяет один список, добавляя к нему элементы другого списка.

# Отличие между методами append() и extend() проявляется при добавлении строки к списку.
# Следующий программный код:
# words1 = ['iq option', 'stepik', 'beegeek']
# words2 = ['iq option', 'stepik', 'beegeek']
# words1.append('python')
# words2.extend('python')
# print(words1)
# print(words2)
# выведет:
# ['iq option', 'stepik', 'beegeek', 'python']
# ['iq option', 'stepik', 'beegeek', 'p', 'y', 't', 'h', 'o', 'n']
# Метод append() добавляет строку 'python' целиком к списку, а метод extend() разбивает
# строку 'python' на  символы 'p', 'y', 't', 'h', 'o', 'n' и их добавляет в качестве
# элементов списка.

# С помощью оператора del можно удалять элементы списка по определенному индексу.
# Следующий программный код:
# numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# del numbers[5]    # удаляем элемент имеющий индекс 5
# print(numbers)
# выведет:
# [1, 2, 3, 4, 5, 7, 8, 9]
# Элемент под указанным индексом удаляется, а список перестраивается.

# Оператор del работает и со срезами: мы можем удалить целый диапазон элементов списка.
# Следующий программный код:
# numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# del numbers[2:7]    # удаляем элементы с 2 по 6 включительно
# print(numbers)
# выведет:
# [1, 2, 8, 9]
# Мы можем удалить все элементы на четных позициях (0, 2, 4, ...) исходного списка.
# Следующий программный код:
# numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# del numbers[::2]
# print(numbers)
#  выведет:
# [2, 4, 6, 8]

# Дополните приведенный код, чтобы он:
# Вывел длину списка;
# Вывел последний элемент списка;
# Вывел список в обратном порядке (вспоминаем срезы);
# Вывел YES если список содержит числа 5 и 17, и NO в противном случае;
# Вывел список с удаленным первым и последним элементами.
# Примечание. Каждый вывод осуществлять с новой строки.
# numbers = [2, 6, 3, 14, 10, 4, 11, 16, 12, 5, 4, 16, 1, 0, 8, 16, 10, 10, 8, 5, 1, 11, 10, 10, 12, 0, 0, 6, 14, 8, 2, 12, 14, 5, 6, 12, 1, 2, 10, 14, 9, 1, 15, 1, 2, 14, 16, 6, 7, 5]
# x = len(numbers)
# y = x - 1
# print(x)
# print(numbers[y])
# print(numbers[::-1])
# if 5 in numbers and 17 in numbers:
#     print('YES')
# else:
#     print('NO')
# del numbers[0]
# del numbers[-1]
# print(numbers)

# подается натуральное число nn, а затем nn строк. Напишите программу,
# которая создает из указанных строк список и выводит его.
# n = int(input())
# s = []
# for _ in range (n):
#     s.append(input())
# print(s)

# программу, выводящую следующий список:
# ['a', 'bb', 'ccc', 'dddd', 'eeeee', 'ffffff', ...]
# Формат выходных данных
# Программа должна вывести указанный список.
# Примечание. Последний элемент списка состоит из 26 символов z
# s = []
# for i in range(ord('z') - ord('a') + 1):
#     s.append(chr(ord('a') + i) * (i + 1))
# print(s)

# подается натуральное число n, а затем nn целых чисел. Напишите программу,
# которая создает из указанных чисел список их кубов.
# n = int(input())
# s = list()
# for _ in range (n):
#      s.append(int(input()) ** 3)
# print(s)

# программе подается натуральное число nn. Напишите программу,
# которая создает список состоящий из делителей введенного числа.
# n = int(input())
# s = []
# for i in range (1, n + 1):
#     if n % i == 0:
#         s.append(i)
# print(s)

#  подается натуральное число n ≥2, а затем n целых чисел. Напишите программу,
#  которая создает из указанных чисел список, состоящий из сумм соседних чисел
#  (0 и 1, 1 и 2, 2 и 3 и т.д.).
# n = int(input())
# s = []
# n1 = int(input())
# for _ in range (2, n + 1):
#     n2 = int(input())
#     su = n2 + n1
#     n1 = n2
#     s.append(su)
# print(s)

# одается натуральное число n, а затем n целых чисел. Напишите программу,
# которая создает из указанных чисел список, затем удаляет все элементы
# стоящие по нечетным индексам, а затем выводит полученный список.
# n = int(input())
# s = []
# for _ in range (1, n + 1):
#     su = int(input())
#     s.append(su)
# del s[1::2]
# print(s)

# рограмме подается натуральное число n и n строк, а затем число k.
# Напишите программу, которая выводит kk-ую букву из введенных строк на
# одной строке без пробелов.
# n = int(input())           # получили число - количество строк
# s = []                     # задаем переменную списка
# for _ in range (n):
#     s.append(input())       # собираем список
# index = int(input())        # получаем номер символа
# rez = ''                    # переменная результирующей строки
# for x in s:
#     if len(x) >= index:      # проверка на условие по длине строки
#         rez += x[index - 1]     # собираем по нужному символу для строки из списка
# print(rez)

# подается натуральное число n, а затем n строк. Напишите программу,
# которая создает список из символов всех строк, а затем выводит его.
# n = int(input())           # получили число - количество строк
# s = []                     # задаем переменную списка
# for _ in range (n):
#     s.extend(input())       # собираем в список по одному символу
# print(s)

